// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DeleteProjects /> renders without crashing 1`] = `
<DeleteProjects
  deleteConfirmOpen={false}
  handleDeleteCancel={[MockFunction]}
  handleDeleteConfirm={[MockFunction]}
  handleResetSelections={[MockFunction]}
  hasSelectedAllDrafts={false}
  showConfirmationMsg={[MockFunction]}
>
  <Mutation
    mutation={
      Object {
        "definitions": Array [
          Object {
            "directives": Array [],
            "kind": "OperationDefinition",
            "name": Object {
              "kind": "Name",
              "value": "DeleteManyVideoProjects",
            },
            "operation": "mutation",
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": Object {
                    "kind": "Name",
                    "value": "deleteProjects",
                  },
                  "arguments": Array [
                    Object {
                      "kind": "Argument",
                      "name": Object {
                        "kind": "Name",
                        "value": "where",
                      },
                      "value": Object {
                        "kind": "Variable",
                        "name": Object {
                          "kind": "Name",
                          "value": "where",
                        },
                      },
                    },
                  ],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "deleteManyVideoProjects",
                  },
                  "selectionSet": Object {
                    "kind": "SelectionSet",
                    "selections": Array [
                      Object {
                        "alias": undefined,
                        "arguments": Array [],
                        "directives": Array [],
                        "kind": "Field",
                        "name": Object {
                          "kind": "Name",
                          "value": "count",
                        },
                        "selectionSet": undefined,
                      },
                    ],
                  },
                },
              ],
            },
            "variableDefinitions": Array [
              Object {
                "defaultValue": undefined,
                "kind": "VariableDefinition",
                "type": Object {
                  "kind": "NamedType",
                  "name": Object {
                    "kind": "Name",
                    "value": "VideoProjectWhereInput",
                  },
                },
                "variable": Object {
                  "kind": "Variable",
                  "name": Object {
                    "kind": "Name",
                    "value": "where",
                  },
                },
              },
            ],
          },
        ],
        "kind": "Document",
        "loc": Object {
          "end": 153,
          "start": 0,
        },
      }
    }
    onCompleted={[Function]}
  >
    <Confirm
      cancelButton="No, take me back"
      className="delete"
      confirmButton="Yes, delete forever"
      content={
        <ConfirmModalContent
          className="delete_confirm delete_confirm--video"
          headline="Are you sure you want to deleteÂ the selected video project(s)?"
          style={Object {}}
        >
          <React.Fragment>
            <p>
              Only selected DRAFT video project(s) will be permanently removed from the Content Cloud.
            </p>
            <p>
              Selected Non-DRAFT projects will be not be removed.
            </p>
          </React.Fragment>
        </ConfirmModalContent>
      }
      onCancel={[MockFunction]}
      onConfirm={[Function]}
      open={false}
      size="small"
    >
      <Modal
        centered={true}
        className="delete"
        closeOnDimmerClick={true}
        closeOnDocumentClick={false}
        dimmer={true}
        eventPool="Modal"
        onClose={[Function]}
        open={false}
        size="small"
      >
        <Portal
          closeOnDocumentClick={false}
          closeOnEscape={true}
          eventPool="Modal"
          mountNode={<body />}
          onClose={[Function]}
          onMount={[Function]}
          onOpen={[Function]}
          onUnmount={[Function]}
          open={false}
          openOnTriggerClick={true}
        />
      </Modal>
    </Confirm>
  </Mutation>
</DeleteProjects>
`;
