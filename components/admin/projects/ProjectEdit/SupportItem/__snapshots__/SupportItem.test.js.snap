// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SupportItem /> renders \`Progress\` component if \`isUploading\` 1`] = `
<li
  className="support-item isUploading"
  key="srt-Arabic"
>
  <Progress
    active={true}
    color="blue"
    precision={0}
    progress={true}
    size="small"
    total={24576}
    value={0}
  />
  <span>
    Uploading item
  </span>
</li>
`;

exports[`<SupportItem /> renders error icon and message component if \`supportItem\` has an error \`uploadStatus\` 1`] = `
<li
  className="support-item error"
  key="srt-Arabic"
>
  <p>
    <Icon
      as="i"
      color="red"
      name="exclamation triangle"
      size="small"
    />
    <span>
      Uploading  error
    </span>
  </p>
</li>
`;

exports[`<SupportItem /> renders without crashing 1`] = `
<li
  className="support-item"
  key="srt-Arabic"
>
  <span
    className="item-name"
  >
    <VisuallyHidden>
      madeinamerica_arabic.srt
    </VisuallyHidden>
    <span
      aria-hidden={true}
      className="item-name-wrap hasEllipsis"
    >
      <Popup
        content="madeinamerica_arabic.srt"
        inverted={true}
        keepInViewPort={true}
        on={
          Array [
            "hover",
            "click",
            "focus",
          ]
        }
        position="top left"
        size="small"
        style={
          Object {
            "msWordBreak": "break-all",
            "overflowWrap": "break-word",
            "wordBreak": "break-word",
            "wordWrap": "break-word",
          }
        }
        trigger={
          <span>
            <Focusable
              order={0}
            >
              <React.Fragment>
                
                â€¦
                madeinamerica_arabic.srt
              </React.Fragment>
            </Focusable>
          </span>
        }
      />
    </span>
  </span>
  <span
    className="item-lang"
  >
    <b
      className="item-lang-wrap hasEllipsis"
    >
      <Popup
        content="Arabic"
        inverted={true}
        keepInViewPort={true}
        on={
          Array [
            "hover",
            "click",
            "focus",
          ]
        }
        position="top left"
        size="small"
        style={
          Object {
            "msWordBreak": "break-all",
            "overflowWrap": "break-word",
            "wordBreak": "break-word",
            "wordWrap": "break-word",
          }
        }
        trigger={
          <span>
            <Focusable
              order={0}
            >
              Arabic
            </Focusable>
          </span>
        }
      />
    </b>
  </span>
</li>
`;
